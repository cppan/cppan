#include <cppan_string.h>

#define CATCH_CONFIG_RUNNER
#include <catch.hpp>

TEST_CASE("save/load", "[source]")
{
    std::string s(R"xxx((pvt.cppan.demo.xz_utils.lzma-5.2.3 PROPERTIES
      INTERFACE_COMPILE_DEFINITIONS "CPPAN_API_pvt_cppan_demo_xz_utils_lzma_5_2_3=CPPAN_SYMBOL_IMPORT;CPPAN;CPPAN_BUILD;CPPAN_SYMBOL_EXPORT=__attribute__((__visibility__(\"default\")));CPPAN_SYMBOL_IMPORT=;HAVE_CLOCK_GETTIME=1;HAVE_FUTIMENS=1;HAVE_FUTIMES=1;HAVE_FUTIMESAT=1;HAVE_POSIX_FADVISE=1;HAVE_UTIME=1;HAVE_UTIMES=1;HAVE_FCNTL_H=1;HAVE_IMMINTRIN_H=1;HAVE_INTTYPES_H=1;HAVE_LIMITS_H=1;HAVE_MEMORY_H=1;HAVE_STDBOOL_H=1;HAVE_STDDEF_H=1;HAVE_STDINT_H=1;HAVE_STDLIB_H=1;HAVE_STRINGS_H=1;HAVE_STRING_H=1;HAVE_SYS_STAT_H=1;HAVE_SYS_TIME_H=1;HAVE_SYS_TYPES_H=1;HAVE_UNISTD_H=1;HAVE_INT32_T=1;SIZEOF_INT32_T=4;SIZE_OF_INT32_T=4;HAVE_INT64_T=1;SIZEOF_INT64_T=8;SIZE_OF_INT64_T=8;HAVE_SIZE_T=1;SIZEOF_SIZE_T=8;SIZE_OF_SIZE_T=8;HAVE_UINT16_T=1;SIZEOF_UINT16_T=2;SIZE_OF_UINT16_T=2;HAVE_UINT32_T=1;SIZEOF_UINT32_T=4;SIZE_OF_UINT32_T=4;HAVE_UINT64_T=1;SIZEOF_UINT64_T=8;SIZE_OF_UINT64_T=8;HAVE_UINT8_T=1;SIZEOF_UINT8_T=1;SIZE_OF_UINT8_T=1;HAVE_UINTPTR_T=1;SIZEOF_UINTPTR_T=8;SIZE_OF_UINTPTR_T=8;HAVE_VOID_P=1;SIZEOF_VOID_P=8;SIZE_OF_VOID_P=8;HAVE__BOOL=1;SIZEOF__BOOL=1;SIZE_OF__BOOL=1;STDC_HEADERS=1;HAVE_DECL_CLOCK_MONOTONIC=0;HAVE_DECL__MM_MOVEMASK_EPI8=0;HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC=1"
      INTERFACE_INCLUDE_DIRECTORIES "/tmp/1/s/obj/a7/68/fa0b/build/f30476c3/cppan/a768fa0b;/tmp/1/s/src/a7/68/fa0b/src/liblzma/api;/tmp/1/s/src/a7/68/fa0b"
      INTERFACE_LINK_LIBRARIES "m;pthread;rt;dl"
    )gdfgfdg
dfgdf
)xxx");

    auto e = get_end_of_string_block(s, 1);
    REQUIRE(e == 1445);
}

int main(int argc, char **argv)
{
    auto rc = Catch::Session().run(argc, argv);
    return rc;
}
